diff --git a/Assignment5/computeInliers.asv b/Assignment5/computeInliers.asv
deleted file mode 100644
index 2d8d4e0..0000000
--- a/Assignment5/computeInliers.asv
+++ /dev/null
@@ -1,38 +0,0 @@
-% function inliers = computeInliers(F,match1,match2,threshold)
-% Find inliers by computing perpendicular errors between the points and the epipolar lines in each image
-% To be brief, we compute the Sampson distance mentioned in the lab file.
-% Input: 
-%   -matrix F, matched points from image1 and image 2, and a threshold (e.g. threshold=50)
-% Output: 
-%   -inliers: indices of inliers
-function inliers = computeInliers(F, match1, match2, threshold)
-
-    % Calculate Sampson distance for each point
-    % Compute numerator and denominator at first
-    inliers = [];
-    for i=1:size(match1, 2)
-        numer = (match2(:, i)' * F * match1(:, i))^2;
-        b = F * match1(:, i);
-        c = F' * match2(:, i);
-        denom = b(1)^2+b(2)^2+c(1)^2+c(2)^2;
-        sd    = numer/denom;
-        if sd < threshold
-            inliers = [inliers];
-        end
-    end
-    
-    
-    
-    
-    
-    
-    %numer = (match2' * F * match1).^2;
-    %b = F * match1;
-    %c = F' * match2;
-    %denom = b(1)^2+b(2)^2+c(1)^2+c(2)^2;
-    %sd    = numer/denom;
-
-    % Return inliers for which sd is smaller than threshold
-    %inliers = find(sd<threshold);
-
-end
diff --git a/Assignment5/estimateFundamentalMatrix.m b/Assignment5/estimateFundamentalMatrix.m
index 0baa365..eec75ef 100644
--- a/Assignment5/estimateFundamentalMatrix.m
+++ b/Assignment5/estimateFundamentalMatrix.m
@@ -3,7 +3,7 @@
 %
 % Input: 
 %           - match1: matched points from the first images
-%           - match2: matched points from the second images
+%           - matchï¼’: matched points from the second images
 % Output: 
 %           - bestF: estimated F 
 %           - bestinliers: inliers found
@@ -50,7 +50,7 @@ function [bestF, bestinliers] = estimateFundamentalMatrix(match1, match2)
         
         % Find inliers by computing perpendicular errors between the points 
         % and the epipolar lines in each image
-        threshold = 50;  % TODO tune parameter
+        threshold = 10;  % TODO tune parameter
         inliers = computeInliers(F,match1,match2,threshold);
         
         % Check if the number of inliers is larger than 8
@@ -81,6 +81,7 @@ function [bestF, bestinliers] = estimateFundamentalMatrix(match1, match2)
             % q= #inliers/#total_pairs (the proportion of inliers over total pairs)
             eps = 0.001;
             q   = bestcount/length(match1);
+            %N1  = ...
             N   = log10(eps)/log10(1 - q^p);
             % To prevent special cases, always run at least a couple of times
             iterations = max(miniter, ceil( N ));
diff --git a/Assignment5/normalize.m b/Assignment5/normalize.m
index 99f8e3e..a212fe9 100644
--- a/Assignment5/normalize.m
+++ b/Assignment5/normalize.m
@@ -9,7 +9,7 @@
 function [Xout, T] = normalize( X )
 
     % Compute Xmean: normalize all X in each image to have 0-mean
-    Xmean = mean(X, 2);
+    Xmean =  mean(X, 2);
 
     % Compute d: scale all X so that the average distance to the mean is sqrt(2).
     % Check the lab file for details.
